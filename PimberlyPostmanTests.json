{
	"info": {
		"_postman_id": "64794d74-0f20-4568-8b7a-52c6891b2845",
		"name": "TEST  V2.2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Active",
			"item": [
				{
					"name": "001 Creates, Updates, Gets and Deletes a Product",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"API_test_product\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{001_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\": \"{{001_SchemaID}}\"\n  }\n\n\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"API_test_product\");",
											"});",
											"",
											"pm.test(\"Id is exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{001_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"PrimaryDescription\": \"Updating the description via API\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData['Primary ID']).to.eql(\"API_test_product\");",
											"});",
											"",
											"pm.test(\"Primary Description Attribute is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData['Primary Description Attribute']).to.eql(\"Updating the description via API\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.primaryId).to.eql(\"API_test_product\");",
											"});",
											"",
											"",
											"pm.test(\"ID is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData._id).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateCreated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateCreated).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateUpdated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateUpdated).to.not.be.empty;",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{001_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: API_test_product\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{001_FeedAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "002 Creates a Product with all attributes populated, Gets all attributes and Deletes the Product ",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created API_test_product_all_attributes\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"API_test_product_all_attributes\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{002_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"API_test_product_all_attributes\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{002_SchemaID}}\",\n  \"attributes\" : {\n\t\t \"PrimaryDescription\": \"Updating the description via API\",\n\t\t  \"PlainTextShortRegular\": \"Text1\",\n\t\t  \"PlainTextShortFreeTypedList\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextShortSingleSelectList\": \"value1\",\n\t\t  \"PlainTextShortMultiSelectList\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextShortComboList\": \"value1\",\n\t\t  \"PlainTextShortSingleSelectDataset\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextShortMultiSelectDataset\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextShortMultiComboList\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextShortComboDataset\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextShortMultiComboDataset\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextShortKeyValuePairs\": { \"key1\": \"value1\" },\n\t\t  \"PlainTextLongRegular\": \"TextLong1\",\n\t\t  \"Table\" : \"Table\",\n\t\t  \"CodeRegular\": \"ABC123\",\n\t\t  \"HTMLRegular\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular\": 1,\n\t\t  \"NumberFreeTypedList\": [111,1],\n\t\t  \"NumberSingleSelectList\": 1,\n\t\t  \"NumberMultiSelectList\": [11,22],\n\t\t  \"NumberComboList\": 1,\n\t\t  \"NumberMultiComboList\": [11,22],\n\t\t  \"NumberSingleSelectDataset\": 1,\n\t\t  \"NumberComboDataset\": 1,\n\t\t  \"NumberMultiSelectDataset\": [1,2],\n\t\t  \"NumberMultiComboDataset\": [1,2],\n\t\t  \"CurrencyRegular\": 1.5,\n\t\t  \"MeasureRegular\": 1,\n\t\t  \"DateRegular\": \"2019-07-19\",\n\t\t  \"TimeRegular\": \"11:00\",\n\t\t  \"DateTimeRegular\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular\": true,\n\t\t  \"MediaSet\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL\": \"test.com\",\n\t\t  \"FreeTypeURL\": [\"test1.com\",\"test2.com\"]\n\t}\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "PROD Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is showing API_test_product_all_attributes\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"API_test_product_all_attributes\");",
											"});",
											"",
											"pm.test(\"Primary Description Attribute is showing Updating the description via API\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary Description Attribute']).to.eql(\"Updating the description via API\");",
											"});",
											"",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextShortRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextShortSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextShortSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"pm.test(\"PlainTextShortKeyValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['PlainTextShortKey/ValuePairs'][0]).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextLongRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextLongRegular).to.eql(\"TextLong1\");",
											"});",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberSingleSelectList is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [11, 22];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.NumberMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberComboList is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [11, 22];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiComboList.length; i++) {",
											"        pm.expect(jsonData.NumberMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberComboDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"pm.test(\"NumberMultiSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [1, 2];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.NumberMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [1, 2];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.NumberMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date+TimeRegular\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{002_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product_all_attributes",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product_all_attributes"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: API_test_product_all_attributes\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{002_FeedAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product_all_attributes",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product_all_attributes"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "003 Creates a Product then updates all attributes, Gets all attributes and Deletes a Product",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created API_test_product_update_all_attributes\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"API_test_product_update_all_attributes\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{003_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"API_test_product_update_all_attributes\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{003_SchemaID}}\"\n  \n }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated API_test_product_update_all_attributes\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"API_test_product_update_all_attributes\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{003_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"PrimaryDescription\": \"Updating the description via API\",\n\t\t  \"PlainTextShortRegular\": \"Text1\",\n\t\t  \"PlainTextShortFreeTypedList\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextShortSingleSelectList\": \"value1\",\n\t\t  \"PlainTextShortMultiSelectList\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextShortComboList\": \"value1\",\n\t\t  \"PlainTextShortSingleSelectDataset\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextShortMultiSelectDataset\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextShortMultiComboList\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextShortComboDataset\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextShortMultiComboDataset\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextShortKeyValuePairs\": { \"key1\": \"value1\" },\n\t\t  \"PlainTextLongRegular\": \"TextLong1\",\n\t\t  \"Table\" : \"Table\",\n\t\t  \"CodeRegular\": \"ABC123\",\n\t\t  \"HTMLRegular\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular\": 1,\n\t\t  \"NumberFreeTypedList\": [111,1],\n\t\t  \"NumberSingleSelectList\": 1,\n\t\t  \"NumberMultiSelectList\": [11,22],\n\t\t  \"NumberComboList\": 1,\n\t\t  \"NumberMultiComboList\": [11,22],\n\t\t  \"NumberSingleSelectDataset\": 1,\n\t\t  \"NumberComboDataset\": 1,\n\t\t  \"NumberMultiSelectDataset\": [1,2],\n\t\t  \"NumberMultiComboDataset\": [1,2],\n\t\t  \"CurrencyRegular\": 1.5,\n\t\t  \"MeasureRegular\": 1,\n\t\t  \"DateRegular\": \"2019-07-19\",\n\t\t  \"TimeRegular\": \"11:00\",\n\t\t  \"DateTimeRegular\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular\": true,\n\t\t  \"MediaSet\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL\": \"test.com\",\n\t\t  \"FreeTypeURL\": [\"test1.com\",\"test2.com\"]\n \n  \n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product_update_all_attributes",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product_update_all_attributes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is showing API_test_product_all_attributes\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"API_test_product_update_all_attributes\");",
											"});",
											"",
											"pm.test(\"Primary Description Attribute is showing Updating the description via API\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary Description Attribute']).to.eql(\"Updating the description via API\");",
											"});",
											"",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextShortRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextShortSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextShortSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextShortComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextShortSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextShortMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextShortMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextShortMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"pm.test(\"PlainTextShortKeyValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['PlainTextShortKey/ValuePairs'][0]).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextLongRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextLongRegular).to.eql(\"TextLong1\");",
											"});",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberSingleSelectList is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [11, 22];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.NumberMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberComboList is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [11, 22];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiComboList.length; i++) {",
											"        pm.expect(jsonData.NumberMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboList).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberComboDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberComboDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"pm.test(\"NumberMultiSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [1, 2];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.NumberMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"NumberMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [1, 2];",
											"",
											"    for (var i = 0; i < jsonData.NumberMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.NumberMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date+TimeRegular\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{003_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product_update_all_attributes",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product_update_all_attributes"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: API_test_product_update_all_attributes\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{003_FeedAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/API_test_product_update_all_attributes",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"API_test_product_update_all_attributes"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "004  Creates, Updates Product Type, and Deletes",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 04API_test_product_typeID\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"04API_test_product_typeID\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{004_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"04API_test_product_typeID\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dc161cb96ebf800172308aa\"\n  }\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 04API_test_product_typeID\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"04API_test_product_typeID\");",
											"});",
											"",
											"pm.test(\"Id is exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{004_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"typeId\": \"Item Group\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/04API_test_product_typeID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"04API_test_product_typeID"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData['Primary ID']).to.eql(\"04API_test_product_typeID\");",
											"});",
											"",
											"pm.test(\"Product Type is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData['Product Type']).to.eql(\"Item Group\");",
											"});",
											"",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.primaryId).to.eql(\"04API_test_product_typeID\");",
											"});",
											"",
											"",
											"pm.test(\"ID is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData._id).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateCreated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateCreated).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateUpdated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateUpdated).to.not.be.empty;",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{004_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/04API_test_product_typeID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"04API_test_product_typeID"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 04API_test_product_typeID\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{004_FeedAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/04API_test_product_typeID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"04API_test_product_typeID"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "005 Creates, Updates Schema, and Deletes",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 05API_test_product_schemaID\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"05API_test_product_schemaID\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{005_FeedAPIKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"05API_test_product_schemaID\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{005_SchemaID}}\",\n  \"attributes\" : {\n  \n  \"PlainTextShortRegular\": \"RemoveMe\"\n  \t\n  \t\n  }\n  }\n"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 05API_test_product_schemaID\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"05API_test_product_schemaID\");",
											"});",
											"",
											"pm.test(\"Id is exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "ZceoP5fgOsWDft3CHZ0e8eliTNnPIPqSBxKaBkZpD4ZSB3d3aKNQZ9IBskRIrdon",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schemaId\": \"{{001_SchemaID}}\"\n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/05API_test_product_schemaID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"05API_test_product_schemaID"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData['Primary ID']).to.eql(\"05API_test_product_schemaID\");",
											"});",
											"",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.primaryId).to.eql(\"05API_test_product_schemaID\");",
											"});",
											"",
											"",
											"pm.test(\"ID is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData._id).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateCreated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateCreated).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"dateUpdated is present\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.dateUpdated).to.not.be.empty;",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{005_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/05API_test_product_schemaID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"05API_test_product_schemaID"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 05API_test_product_schemaID\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{005_FeedAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/05API_test_product_schemaID",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"05API_test_product_schemaID"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "006 All attributes with a source of ANY can be populated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 006_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"006_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"006_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{006_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }\n"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 006_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"006_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular006\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList006\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList006\": \"value1\",\n\t\t  \"PlainTextMultiSelectList006\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList006\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset006\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset006\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList006\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset006\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset006\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs006\": { \"key1\": \"value1\" },\n\t\t  \"Table006\" : \"Table\", \n\t\t  \"CodeRegular006\": \"ABC123\",\n\t\t  \"HTMLRegular006\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular006\": 1,\n\t\t  \"NumberFreeTypedList006\": [111,1],\n\t\t  \"NumberSingleSelectDataset006\": 1,\n\t\t  \"CurrencyRegular006\": 1.5,\n\t\t  \"MeasureWeightgRegular006\": 1,\n\t\t  \"DateRegular006\": \"2019-07-19\",\n\t\t  \"TimeRegular006\": \"11:00\",\n\t\t  \"DateTimeRegular006\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular006\": true,\n\t\t  \"MediaSet006\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet006\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL006\": \"test.com\",\n\t\t  \"FreeTypeURL006\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/006_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"006_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbeceaea-8fb2-404e-af3f-572f0a6dfbb0",
										"exec": [
											"pm.test(\"Primary ID is showing 006_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"006_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['PlainTextKey/ValuePairs']['key1']).is.to.equal(\"value1\");",
											"});",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{006_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/006_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"006_API_test_product"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 006_API_test_product\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/006_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"006_API_test_product"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "007 All attributes with a source of PIMBERLY USERS cannot be populated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 007_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"007_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"007_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{007_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }\n"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								},
								"description": "Create a product using the API"
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 007_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"007_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular007\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList007\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList007\": \"value1\",\n\t\t  \"PlainTextMultiSelectList007\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList007\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset007\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset007\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList007\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset007\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset007\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs007\": { \"key1\": \"value1\" },\n\t\t  \"Table\" : \"Table\", \n\t\t  \"CodeRegular007\": \"ABC123\",\n\t\t  \"HTMLRegular007\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular007\": 1,\n\t\t  \"NumberFreeTypedList007\": [111,1],\n\t\t  \"NumberSingleSelectDataset007\": 1,\n\t\t  \"CurrencyRegular007\": 1.5,\n\t\t  \"MeasureWeightgRegular007\": 1,\n\t\t  \"DateRegular007\": \"2019-07-19\",\n\t\t  \"TimeRegular007\": \"11:00\",\n\t\t  \"DateTimeRegular007\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular007\": true,\n\t\t  \"MediaSet007\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/3992db4f/5d94adbf42d26c0017ec39bb.JPG\",\n\t\t  \"ProductSet007\": \"DNDProductToBeAdded\",\n\t\t  \"URL007\": \"test.com\",\n\t\t  \"FreeTypeURL007\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/007_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"007_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
										"exec": [
											"pm.test(\"Primary ID is showing 006_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"007_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"// Started checking to see if value exist, which they shouldnt ",
											"",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextFreeTypedList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiSelectList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextComboList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiComboList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiComboList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiSelectDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiComboDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiComboDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['PlainTextKey/ValuePairs']).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// // CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).does.not.exist;",
											"});",
											"",
											"// // TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).does.not.exist;",
											"});",
											"",
											"",
											"// // HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberFreeTypedList).does.not.exist;",
											"});",
											"",
											"pm.test(\"NumberSingleSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// // CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).does.not.exist;",
											"});",
											"",
											"",
											"// // MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).does.not.exist;",
											"});",
											"",
											"",
											"// //DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).does.not.exist;",
											"});",
											"",
											"",
											"// // MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet).does.not.exist;",
											"});",
											"",
											"",
											"// // PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).does.not.exist;",
											"});",
											"",
											"pm.test(\"FreeTypeURL does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.FreeTypeURL).does.not.exist;",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{007_ChannelAPIKey}}"
									},
									{
										"key": "extendResponse",
										"type": "text",
										"value": "1"
									},
									{
										"key": "attributes",
										"type": "text",
										"value": "*"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/007_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"007_API_test_product"
									]
								},
								"description": "Gets product by Primary ID"
							},
							"response": []
						},
						{
							"name": "Delete Product By PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b802d510-e33f-460c-aa04-03af248fb475",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Deleted product: 007_API_test_product\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/007_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"007_API_test_product"
									]
								},
								"description": "Deletes a product using the primary ID "
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "008 All attributes with a source of FEED A, a master of ANY, NOT populated, can be populated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec83733a-57e0-433c-9bde-679d7ccbd717",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 008_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"008_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"008_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{008_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }\n"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a131a4f-1ec9-4ae5-aa4e-e8e6df751627",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 008_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"008_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular008\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList008\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList008\": \"value1\",\n\t\t  \"PlainTextMultiSelectList008\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList008\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset008\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset008\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList008\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset008\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset008\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs008\": { \"key1\": \"value1\" },\n\t\t  \"Table008\" : \"Table\", \n\t\t  \"CodeRegular008\": \"ABC123\",\n\t\t  \"HTMLRegular008\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular008\": 1,\n\t\t  \"NumberFreeTypedList008\": [111,1],\n\t\t  \"NumberSingleSelectDataset008\": 1,\n\t\t  \"CurrencyRegular008\": 1.5,\n\t\t  \"MeasureRegular008\": 1,\n\t\t  \"DateRegular008\": \"2019-07-19\",\n\t\t  \"TimeRegular008\": \"11:00\",\n\t\t  \"DateTimeRegular008\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular008\": true,\n\t\t  \"Media008\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet008\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL008\": \"test.com\",\n\t\t  \"FreeTypeURL008\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/008_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"008_API_test_product"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "244aecc8-4d70-4caa-818f-a15870989d12",
										"exec": [
											"pm.test(\"Primary ID is showing 008_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"008_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\"];",
											"",
											"    for (var i = 0; i < jsonData['PlainTextKey/ValuePairs'].length; i++) {",
											"        pm.expect(jsonData['PlainTextKey/ValuePairs'][i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{008_ChannelAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/008_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"008_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d57c031-dfca-4891-b9a9-962bba36ad08",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Deleted product: 008_API_test_product\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/008_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"008_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "009 All attributes with a source of FEED A, a master of FEED A, NOT populated, cannot be populated via API FEED B",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "968eba66-fe22-40c0-b2f0-875a94cea687",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 009_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"009_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"009_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{009_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a833cb2-94fa-4871-9dab-0ac5cbb69f95",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 009_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"009_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_B_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular009\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList009\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList009\": \"value1\",\n\t\t  \"PlainTextMultiSelectList009\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList009\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset009\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset009\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList009\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset009\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset009\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs009\": { \"key1\": \"value1\" },\n\t\t  \"Table009\" : \"Table\", \n\t\t  \"CodeRegular009\": \"ABC123\",\n\t\t  \"HTMLRegular009\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular009\": 1,\n\t\t  \"NumberFreeTypedList009\": [111,1],\n\t\t  \"NumberSingleSelectDataset009\": 1,\n\t\t  \"CurrencyRegular009\": 1.5,\n\t\t  \"MeasureWeightgRegular009\": 1,\n\t\t  \"DateRegular009\": \"2019-07-19\",\n\t\t  \"TimeRegular009\": \"11:00\",\n\t\t  \"DateTimeRegular009\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular009\": true,\n\t\t  \"Media009\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/3992db4f/5d94adbf42d26c0017ec39bb.JPG\",\n\t\t  \"ProductSet009\": \"DNDProductToBeAdded\",\n\t\t  \"URL009\": \"test.com\",\n\t\t  \"FreeTypeURL009\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/009_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"009_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cf620eb-3826-4686-beb9-c5485e32119f",
										"exec": [
											"pm.test(\"Primary ID is showing 009_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"009_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"// Started checking to see if value exist, which they shouldnt ",
											"",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextFreeTypedList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiSelectList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextComboList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiComboList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiComboList).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiSelectDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextMultiComboDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextMultiComboDataset).does.not.exist;",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['PlainTextKey/ValuePairs']).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// // CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).does.not.exist;",
											"});",
											"",
											"// // TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).does.not.exist;",
											"});",
											"",
											"",
											"// // HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberFreeTypedList).does.not.exist;",
											"});",
											"",
											"pm.test(\"NumberSingleSelectDataset does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// // CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).does.not.exist;",
											"});",
											"",
											"",
											"// // MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).does.not.exist;",
											"});",
											"",
											"",
											"// //DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).does.not.exist;",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).does.not.exist;",
											"});",
											"",
											"",
											"// // MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet).does.not.exist;",
											"});",
											"",
											"",
											"// // PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet).does.not.exist;",
											"});",
											"",
											"",
											"",
											"// //URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).does.not.exist;",
											"});",
											"",
											"pm.test(\"FreeTypeURL does not exist\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.FreeTypeURL).does.not.exist;",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{009_ChannelAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/009_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"009_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0789b161-2321-4c97-92c8-65c7af7e51c4",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Deleted product: 009_API_test_product\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/009_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"009_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "92207b87-8b89-469c-a9f3-9e9d6c9386be",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8d0a397d-6ca7-4bb9-8706-846f48d1dc58",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "011-All attributes with a source of ANY, a master of NONE, already populated by any source, cannot be updated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 011_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"011_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"011_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{011_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID Feed B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Updated 011_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.primaryId).to.eql(\"011_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_B_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular011\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList011\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList011\": \"value1\",\n\t\t  \"PlainTextMultiSelectList011\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList011\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset011\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset011\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList011\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset011\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset011\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs011\": { \"key1\": \"value1\" },\n\t\t  \"Table011\" : \"Table\", \n\t\t  \"CodeRegular011\": \"ABC123\",\n\t\t  \"HTMLRegular011\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular011\": 1,\n\t\t  \"NumberFreeTypedList011\": [111,1],\n\t\t  \"NumberSingleSelectDataset011\": 1,\n\t\t  \"CurrencyRegular011\": 1.5,\n\t\t  \"MeasureRegular011\": 1,\n\t\t  \"DateRegular011\": \"2019-07-19\",\n\t\t  \"TimeRegular011\": \"11:00\",\n\t\t  \"DateTimeRegular011\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular011\": true,\n\t\t  \"MediaSet011\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet011\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL011\": \"test.com\",\n\t\t  \"FreeTypeURL011\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/011_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"011_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 011_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"011_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular011\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList011\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList011\": \"value2\",\n\t\t  \"PlainTextMultiSelectList011\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList011\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset011\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset011\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList011\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset011\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset011\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs011\": { \"key1\": \"value2\" },\n\t\t  \"Table011\" : \"Table2\", \n\t\t  \"CodeRegular011\": \"ABC123666\",\n\t\t  \"HTMLRegular011\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular011\": 2,\n\t\t  \"NumberFreeTypedList011\": [222,2],\n\t\t  \"NumberSingleSelectDataset011\": 2,\n\t\t  \"CurrencyRegular011\": 2.5,\n\t\t  \"MeasureWeightgRegular011\": 2,\n\t\t  \"DateRegular011\": \"2019-07-20\",\n\t\t  \"TimeRegular011\": \"12:00\",\n\t\t  \"DateTimeRegular011\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular011\": false,\n\t\t  \"MediaSet011\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet011\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL011\": \"test2.com\",\n\t\t  \"FreeTypeURL011\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/011_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"011_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf05b8ab-20e7-46ff-a9a3-bfca2781b659",
										"exec": [
											"pm.test(\"Primary ID is showing 011_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"011_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\"];",
											"",
											"    for (var i = 0; i < jsonData['PlainTextKey/ValuePairs'].length; i++) {",
											"        pm.expect(jsonData['PlainTextKey/ValuePairs'][i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(\"1\");",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{011_ChannelAPIKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/011_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"011_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Deleted product: 011_API_test_product\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/011_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"011_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "012-All attributes with a source of ANY, a master of LATCH, already populated by Feed A, can be updated by Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 012_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"012_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"012_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{012_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 012_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"012_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular012\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList012\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList012\": \"value2\",\n\t\t  \"PlainTextMultiSelectList012\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList012\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset012\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset012\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList012\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset012\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset012\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs012\": { \"key1\": \"value2\" },\n\t\t  \"Table012\" : \"Table2\", \n\t\t  \"CodeRegular012\": \"ABC123666\",\n\t\t  \"HTMLRegular012\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular012\": 2,\n\t\t  \"NumberFreeTypedList012\": [222,2],\n\t\t  \"NumberSingleSelectDataset012\": 2,\n\t\t  \"CurrencyRegular012\": 2.5,\n\t\t  \"MeasureRegular012\": 2,\n\t\t  \"DateRegular012\": \"2019-07-20\",\n\t\t  \"TimeRegular012\": \"12:00\",\n\t\t  \"DateTimeRegular012\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular012\": false,\n\t\t  \"MediaSet012\": \"5d7607c08dcb2b5efa000011\",\n\t\t  \"ProductSet012\": \"5dcacc348aabd1001294fb48\",\n\t\t  \"URL012\": \"test2.com\",\n\t\t  \"FreeTypeURL012\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/012_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"012_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A  with a different values",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.message).to.eql(\"Updated 012_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.primaryId).to.eql(\"012_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular012\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList012\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList012\": \"value1\",\n\t\t  \"PlainTextMultiSelectList012\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList012\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset012\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset012\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList012\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset012\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset012\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs012\": { \"key1\": \"value1\" },\n\t\t  \"Table012\" : \"Table\", \n\t\t  \"CodeRegular012\": \"ABC123\",\n\t\t  \"HTMLRegular012\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular012\": 1,\n\t\t  \"NumberFreeTypedList012\": [111,1],\n\t\t  \"NumberSingleSelectDataset012\": 1,\n\t\t  \"CurrencyRegular012\": 1.5,\n\t\t  \"MeasureRegular012\": 1,\n\t\t  \"DateRegular012\": \"2019-07-19\",\n\t\t  \"TimeRegular012\": \"11:00\",\n\t\t  \"DateTimeRegular012\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular012\": true,\n\t\t  \"MediaSet012\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet012\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL012\": \"test.com\",\n\t\t  \"FreeTypeURL012\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/012_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"012_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4bba22c9-1537-4551-a970-611ac21b37a4",
										"exec": [
											"pm.test(\"Primary ID is showing 012_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"012_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\"];",
											"",
											"    for (var i = 0; i < jsonData['PlainTextKey/ValuePairs'].length; i++) {",
											"        pm.expect(jsonData['PlainTextKey/ValuePairs'][i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{012_ChannelAPIKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "javascript"
										}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/012_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"012_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 012_API_test_product\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/012_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"012_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "013-All attributes with a source of ANY, a master of LATCH, already populated by Feed A, cannot be updated by Feed B",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 013_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"013_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"013_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{013_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 013_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"013_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_B_KEY}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular013\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList013\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList013\": \"value1\",\n\t\t  \"PlainTextMultiSelectList013\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList013\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset013\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset013\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList013\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset013\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset013\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs013\": { \"key1\": \"value1\" },\n\t\t  \"Table013\" : \"Table\", \n\t\t  \"CodeRegular013\": \"ABC123\",\n\t\t  \"HTMLRegular013\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular013\": 1,\n\t\t  \"NumberFreeTypedList013\": [111,1],\n\t\t  \"NumberSingleSelectDataset013\": 1,\n\t\t  \"CurrencyRegular013\": 1.5,\n\t\t  \"MeasureRegular013\": 1,\n\t\t  \"DateRegular013\": \"2019-07-19\",\n\t\t  \"TimeRegular013\": \"11:00\",\n\t\t  \"DateTimeRegular013\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular013\": true,\n\t\t  \"MediaSet013\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet013\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL013\": \"test.com\",\n\t\t  \"FreeTypeURL013\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/013_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"013_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 013_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"013_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular013\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList013\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList013\": \"value2\",\n\t\t  \"PlainTextMultiSelectList013\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList013\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset013\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset013\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList013\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset013\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset013\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs013\": { \"key1\": \"value2\" },\n\t\t  \"Table013\" : \"Table2\", \n\t\t  \"CodeRegular013\": \"ABC123666\",\n\t\t  \"HTMLRegular013\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular013\": 2,\n\t\t  \"NumberFreeTypedList013\": [222,2],\n\t\t  \"NumberSingleSelectDataset013\": 2,\n\t\t  \"CurrencyRegular013\": 2.5,\n\t\t  \"MeasureWeightgRegular013\": 2,\n\t\t  \"DateRegular013\": \"2019-07-20\",\n\t\t  \"TimeRegular013\": \"12:00\",\n\t\t  \"DateTimeRegular013\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular013\": false,\n\t\t  \"Media013\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000012.jpg\",\n\t\t  \"ProductSet013\": \"DNDProductToBeAdded2\",\n\t\t  \"URL013\": \"test2.com\",\n\t\t  \"FreeTypeURL013\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/013_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"013_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product by Primary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "745c83fa-355b-4d3e-9e15-c56d9f9301da",
										"exec": [
											"pm.test(\"Primary ID is showing 013_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"013_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\"];",
											"",
											"    for (var i = 0; i < jsonData['PlainTextKey/ValuePairs'].length; i++) {",
											"        pm.expect(jsonData['PlainTextKey/ValuePairs'][i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"Date + Time\"]).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{013_ChannelAPIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "javascript"
										}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/013_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"013_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 013_API_test_product\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_B_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/013_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"013_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "014-All attributes with a source of ANY, a master of PIMBERLY USERS, already populated by any source, cannot be updated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 014_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"014_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"014_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"{{014_SchemaID}}\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "{{URL_VERSION}}products",
									"host": [
										"{{URL_VERSION}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 014_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"014_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_B_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular014\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList014\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList014\": \"value1\",\n\t\t  \"PlainTextMultiSelectList014\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList014\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset014\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset014\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList014\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset014\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset014\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs014\": { \"key1\": \"value1\" },\n\t\t  \"Table014\" : \"Table\", \n\t\t  \"CodeRegular014\": \"ABC123\",\n\t\t  \"HTMLRegular014\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular014\": 1,\n\t\t  \"NumberFreeTypedList014\": [111,1],\n\t\t  \"NumberSingleSelectDataset014\": 1,\n\t\t  \"CurrencyRegular014\": 1.5,\n\t\t  \"MeasureRegular014\": 1,\n\t\t  \"DateRegular014\": \"2019-07-19\",\n\t\t  \"TimeRegular014\": \"11:00\",\n\t\t  \"DateTimeRegular014\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular014\": true,\n\t\t  \"MediaSet014\": \"5da5a3f0688c5a30a1bff4f7\",\n\t\t  \"ProductSet014\": \"5dc136f496ebf800172307f8\",\n\t\t  \"URL014\": \"test.com\",\n\t\t  \"FreeTypeURL014\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/014_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"014_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 014_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"014_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{FEED_A_KEY}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular014\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList014\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList014\": \"value2\",\n\t\t  \"PlainTextMultiSelectList014\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList014\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset014\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset014\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList014\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset014\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset014\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs014\": { \"key1\": \"value2\" },\n\t\t  \"Table014\" : \"Table2\", \n\t\t  \"CodeRegular014\": \"ABC123666\",\n\t\t  \"HTMLRegular014\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular014\": 2,\n\t\t  \"NumberFreeTypedList014\": [222,2],\n\t\t  \"NumberSingleSelectDataset014\": 2,\n\t\t  \"CurrencyRegular014\": 2.5,\n\t\t  \"MeasureWeightgRegular014\": 2,\n\t\t  \"DateRegular014\": \"2019-07-20\",\n\t\t  \"TimeRegular014\": \"12:00\",\n\t\t  \"DateTimeRegular014\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular014\": false,\n\t\t  \"MediaSet014\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000012.jpg\",\n\t\t  \"ProductSet014\": \"DNDProductToBeAdded2\",\n\t\t  \"URL014\": \"test2.com\",\n\t\t  \"FreeTypeURL014\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "{{URL_VERSION}}products/014_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"014_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product by Primary ID Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a3f4a3b-34e4-42c3-827a-83167edc5ec8",
										"exec": [
											"pm.test(\"Primary ID is showing 014_API_test_product\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData['Primary ID']).to.eql(\"014_API_test_product\");",
											"});",
											"",
											"//TESTING ATTRIBUTES ",
											"",
											"",
											"//Plain Text ",
											"",
											"pm.test(\"PlainTextRegular is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextRegular).to.eql(\"Text1\");",
											"});",
											"",
											"pm.test(\"PlainTextFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"Text1\", \"Text2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.PlainTextFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectList).to.eql(\"value1\");",
											"});",
											"",
											"pm.test(\"PlainTextMultiSelectList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\", \"value2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboList).to.eql(\"value1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"value1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboList.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextSingleSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextSingleSelectDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"pm.test(\"PlainTextComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.PlainTextComboDataset).to.eql(\"ValueDEFAULT1\");",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMulitSelectDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"ValueDEFAULT1\", \"ValueDEFAULT2\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiSelectDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiSelectDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"pm.test(\"PlainTextMultiComboDataset is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"freevalue\", \"ValueDEFAULT1\"];",
											"",
											"    for (var i = 0; i < jsonData.PlainTextMultiComboDataset.length; i++) {",
											"        pm.expect(jsonData.PlainTextMultiComboDataset[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"pm.test(\"PlainTextKey/ValuePairs is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"value1\"];",
											"",
											"    for (var i = 0; i < jsonData['PlainTextKey/ValuePairs'].length; i++) {",
											"        pm.expect(jsonData['PlainTextKey/ValuePairs'][i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"// CODE ATTRIBUTE",
											"",
											"",
											"pm.test(\"CodeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CodeRegular).to.eql(\"ABC123\");",
											"});",
											"",
											"// TABLE ATTRIBUTE",
											"",
											"",
											"pm.test(\"Table is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.Table).to.eql(\"Table\");",
											"});",
											"",
											"",
											"// HTML ATTRIBUTE",
											"",
											"",
											"pm.test(\"HTMLRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.HTMLRegular).to.eql(\"<p>Text1</p>\");",
											"});",
											"",
											"",
											"",
											"//NUMBER ATTRIBUTES",
											"",
											"pm.test(\"NumberRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberRegular).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"NumberFreeTypedList is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [111, 1];",
											"",
											"    for (var i = 0; i < jsonData.NumberFreeTypedList.length; i++) {",
											"        pm.expect(jsonData.NumberFreeTypedList[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"pm.test(\"NumberSingleSelectDataset is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.NumberSingleSelectDataset).to.eql(1);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"// CURRENCY ATTRIBUTE",
											"",
											"",
											"pm.test(\"CurrencyRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.CurrencyRegular).to.eql(\"1.50\");",
											"});",
											"",
											"",
											"// MEASURE ATTRIBUTE",
											"",
											"",
											"pm.test(\"MeasureRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MeasureRegular).to.eql(1);",
											"});",
											"",
											"",
											"//DATE AND TIME ATTRIBUTES",
											"",
											"",
											"pm.test(\"DateRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateRegular).to.eql(\"2019/07/19\");",
											"});",
											"",
											"",
											"pm.test(\"TimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TimeRegular).to.eql(\"11:00\");",
											"});",
											"",
											"",
											"pm.test(\"DateTimeRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.DateTimeRegular).to.eql(\"2019/07/19 11:00\");",
											"});",
											"",
											"",
											"",
											"//BOOLEAN ATTRIBUTE",
											"",
											"",
											"pm.test(\"TrueorFalseRegular is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.TrueorFalseRegular).to.eql(\"1\");",
											"});",
											"",
											"",
											"// MEDIA SET ",
											"",
											"",
											"pm.test(\"MediaSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.MediaSet[0]).to.eql(\"https://cdn.preview.pimber.ly/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000010.jpg\");",
											"});",
											"",
											"",
											"// PRODUCT SET ",
											"",
											"",
											"pm.test(\"ProductSet is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.ProductSet[0]).to.eql(\"DNDProductToBeAdded\");",
											"});",
											"",
											"",
											"",
											"//URL ATTRIBUTES",
											"",
											"",
											"pm.test(\"URL is showing a valid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.URL).to.eql(\"test.com\");",
											"});",
											"",
											"",
											"pm.test(\"FreeTypeURL is showing valid values\", function () {",
											"    var jsonData = pm.response.json();",
											"    var strings = [\"test1.com\", \"test2.com\"];",
											"",
											"    for (var i = 0; i < jsonData.FreeTypeURL.length; i++) {",
											"        pm.expect(jsonData.FreeTypeURL[i]).to.eql(strings[i]);",
											"    }",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{014_ChannelAPIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "javascript"
										}
									}
								},
								"url": {
									"raw": "{{URL_VERSION}}products/014_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"014_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted product: 014_API_test_product\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{FEED_A_KEY}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL_VERSION}}products/014_API_test_product",
									"host": [
										"{{URL_VERSION}}products"
									],
									"path": [
										"014_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Tests that are able to be run to test the system",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2b1aa8f8-003a-4a41-94c5-54fca2d685ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "55565479-1200-4935-8049-56bc9d32cc97",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Debugging/Fix Required",
			"item": [],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Blocked ",
			"item": [],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "357233d0-8c4f-4dcd-9931-64c2f6cbedd1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ac555ec2-58c0-4f1a-b73e-cfa4ed6fc1b6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ready For Review",
			"item": [
				{
					"name": "015-All attributes with a source of ANY, a master of API FEED A, already populated by any source, can be updated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 015_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"015_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"015_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dcbf2277aebf000134647b1\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 015_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"015_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Y0Zj2sxJeG9CfaC9OlEUleLfpnc7ZElY5MZ3yHf62CYqI055wC9HBSVOa5nfQgb6"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular015\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList015\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList015\": \"value1\",\n\t\t  \"PlainTextMultiSelectList015\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList015\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset015\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset015\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList015\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset015\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset015\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs015\": { \"key1\": \"value1\" },\n\t\t  \"Table015\" : \"Table\", \n\t\t  \"CodeRegular015\": \"ABC123\",\n\t\t  \"HTMLRegular015\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular015\": 1,\n\t\t  \"NumberFreeTypedList015\": [111,1],\n\t\t  \"NumberSingleSelectDataset015\": 1,\n\t\t  \"CurrencyRegular015\": 1.5,\n\t\t  \"MeasureWeightgRegular015\": 1,\n\t\t  \"DateRegular015\": \"2019-07-19\",\n\t\t  \"TimeRegular015\": \"11:00\",\n\t\t  \"DateTimeRegular015\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular015\": true,\n\t\t  \"Media015\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/3992db4f/5d94adbf42d26c0017ec39bb.JPG\",\n\t\t  \"ProductSet015\": \"DNDProductToBeAdded\",\n\t\t  \"URL015\": \"test.com\",\n\t\t  \"FreeTypeURL015\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/015_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"015_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 014_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"014_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular015\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList015\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList015\": \"value2\",\n\t\t  \"PlainTextMultiSelectList015\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList015\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset015\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset015\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList015\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset015\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset015\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs015\": { \"key1\": \"value2\" },\n\t\t  \"Table015\" : \"Table2\", \n\t\t  \"CodeRegular015\": \"ABC123666\",\n\t\t  \"HTMLRegular015\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular015\": 2,\n\t\t  \"NumberFreeTypedList015\": [222,2],\n\t\t  \"NumberSingleSelectDataset015\": 2,\n\t\t  \"CurrencyRegular015\": 2.5,\n\t\t  \"MeasureWeightgRegular015\": 2,\n\t\t  \"DateRegular015\": \"2019-07-20\",\n\t\t  \"TimeRegular015\": \"12:00\",\n\t\t  \"DateTimeRegular015\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular015\": false,\n\t\t  \"Media015\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000012.jpg\",\n\t\t  \"ProductSet015\": \"DNDProductToBeAdded2\",\n\t\t  \"URL015\": \"test2.com\",\n\t\t  \"FreeTypeURL015\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/015_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"015_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted API_test_product_update_all_attributes\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									}
								],
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/015_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"015_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2da8630-30f5-48d9-84c3-83d0264bb284",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1702d002-72d2-41fa-816c-e2e0d6ef9ace",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "016-All attributes with a source of ANY, a master of API FEED A, already populated by any source, cannot be updated via API Feed B",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 016_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"016_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"016_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dcc101ba43d790011a70e34\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 016_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"016_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular016\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList016\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList016\": \"value1\",\n\t\t  \"PlainTextMultiSelectList016\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList016\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset016\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset016\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList016\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset016\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset016\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs016\": { \"key1\": \"value1\" },\n\t\t  \"Table016\" : \"Table\", \n\t\t  \"CodeRegular016\": \"ABC123\",\n\t\t  \"HTMLRegular016\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular016\": 1,\n\t\t  \"NumberFreeTypedList016\": [111,1],\n\t\t  \"NumberSingleSelectDataset016\": 1,\n\t\t  \"CurrencyRegular016\": 1.5,\n\t\t  \"MeasureWeightgRegular016\": 1,\n\t\t  \"DateRegular016\": \"2019-07-19\",\n\t\t  \"TimeRegular016\": \"11:00\",\n\t\t  \"DateTimeRegular016\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular016\": true,\n\t\t  \"Media01\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/3992db4f/5d94adbf42d26c0017ec39bb.JPG\",\n\t\t  \"ProductSet016\": \"DNDProductToBeAdded\",\n\t\t  \"URL016\": \"test.com\",\n\t\t  \"FreeTypeURL016\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/016_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"016_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID by Feed B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 014_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"014_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Y0Zj2sxJeG9CfaC9OlEUleLfpnc7ZElY5MZ3yHf62CYqI055wC9HBSVOa5nfQgb6"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular016\": \"Text2\",\n\t\t  \"PlainTextFreeTypedList016\": [\"Text2\",\"Text3\"],\n\t\t  \"PlainTextSingleSelectList016\": \"value2\",\n\t\t  \"PlainTextMultiSelectList016\": [\"value2\",\"value3\"], \n\t\t  \"PlainTextComboList016\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset016\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset016\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList016\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset016\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset016\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs016\": { \"key1\": \"value2\" },\n\t\t  \"Table016\" : \"Table2\", \n\t\t  \"CodeRegular016\": \"ABC123666\",\n\t\t  \"HTMLRegular016\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular016\": 2,\n\t\t  \"NumberFreeTypedList016\": [222,2],\n\t\t  \"NumberSingleSelectDataset016\": 2,\n\t\t  \"CurrencyRegular016\": 2.5,\n\t\t  \"MeasureWeightgRegular016\": 2,\n\t\t  \"DateRegular016\": \"2019-07-20\",\n\t\t  \"TimeRegular016\": \"12:00\",\n\t\t  \"DateTimeRegular016\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular016\": false,\n\t\t  \"Media016\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000012.jpg\",\n\t\t  \"ProductSet016\": \"DNDProductToBeAdded2\",\n\t\t  \"URL016\": \"test2.com\",\n\t\t  \"FreeTypeURL016\": [\"test2.com\",\"test3.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/016_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"016_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted API_test_product_update_all_attributes\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
									}
								],
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/016_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"016_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "In Development",
			"item": [
				{
					"name": "Karolina Temp",
					"item": [
						{
							"name": "025-Channel - Only products for the specified channel are returned",
							"item": [
								{
									"name": "Create a product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows created product Primary ID\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Created 025_API_test_product\");",
													"});",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.primaryId).to.eql(\"025_API_test_product\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primaryId\":\"025_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dd50b0d3be6ec0011d6fa59\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Release product to Channel A",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, application/xml, text/xml, application/javascript, text/javascript"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "http://qa.pimberly.com/api/v2.2/products/025_API_test_product/channels/5dd509833be6ec0011d6fa55",
											"protocol": "http",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products",
												"025_API_test_product",
												"channels",
												"5dd509833be6ec0011d6fa55"
											]
										},
										"description": "## Under construction!\n\nThis method is not yet avaliable."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "026-Approvals - Products under create & update approval are shown correctly via API ",
							"item": [
								{
									"name": "Create a product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows created product Primary ID\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Created 025_API_test_product\");",
													"});",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.primaryId).to.eql(\"025_API_test_product\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primaryId\":\"026_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dd528503be6ec0011d6fa7d\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update product by primaryId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc001644-1e10-4d2a-b490-09d185d9e6ce",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg",
												"description": "Admin or user level API key associated with a feed"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"PlainTextShortRegular\": \"Updated\"\n}"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2/products/026_API_test_product",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2",
												"products",
												"026_API_test_product"
											]
										},
										"description": "This endpoint will change a product according to the update sent in the request body."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "035-Lifecycles - Lifecycle stage can be amended",
							"item": [
								{
									"name": "Create a product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows created product Primary ID\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Created 025_API_test_product\");",
													"});",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.primaryId).to.eql(\"025_API_test_product\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primaryId\":\"035_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dd528503be6ec0011d6fa7d\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update lifecycle stage by primaryId",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, application/xml, text/xml, application/javascript, text/javascript"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Phase2\":\"5d83339c8dcb2b2a8b000020\"\n}"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2/products/035_API_test_product/lifecycle",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2",
												"products",
												"035_API_test_product",
												"lifecycle"
											]
										},
										"description": "This endpoint will change the products lifecycle stage to the stage specified in the request body.\n\n**Example response**\n```json\n{\n    \"status\": \"success\",\n    \"primaryId\": \"parent2\",\n    \"lifecycle\": \"New Phase\"\n}\n```"
									},
									"response": [
										{
											"name": "Update lifecycle stage by primaryId",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json, application/xml, text/xml, application/javascript, text/javascript"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "{USER_TOKEN}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lifecycleStage\":\"5ccbf0ced7522f053b000006\"\n}"
												},
												"url": {
													"raw": "https://{BASE_URL}/api/v2/products/{PRIMARY_ID}/lifecycle",
													"protocol": "https",
													"host": [
														"{BASE_URL}"
													],
													"path": [
														"api",
														"v2",
														"products",
														"{PRIMARY_ID}",
														"lifecycle"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "66",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Fri, 10 May 2019 15:35:01 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "ETag",
													"value": "W/\"42-2BRDW+ntHd8f4it8HyIQYg\"",
													"name": "ETag",
													"description": "An identifier for a specific version of a resource, often a message digest"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains",
													"name": "Strict-Transport-Security",
													"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff",
													"name": "X-Content-Type-Options",
													"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off",
													"name": "X-DNS-Prefetch-Control",
													"description": "Custom header"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen",
													"name": "X-Download-Options",
													"description": "Custom header"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN",
													"name": "X-Frame-Options",
													"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block",
													"name": "X-XSS-Protection",
													"description": "Cross-site scripting (XSS) filter"
												}
											],
											"cookie": [],
											"body": "{\"status\":\"success\",\"primaryId\":\"parent2\",\"lifecycle\":\"New Phase\"}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "James Temp",
					"item": [
						{
							"name": "001 Gets 5 Products and checks sequence",
							"item": [
								{
									"name": "Create a product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "155763cf-f6b3-4dc2-9daf-62b57903c066",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows created product Primary ID\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Created 04API_test_product_typeID\");",
													"});",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.primaryId).to.eql(\"04API_test_product_typeID\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "ZceoP5fgOsWDft3CHZ0e8eliTNnPIPqSBxKaBkZpD4ZSB3d3aKNQZ9IBskRIrdon",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primaryId\":\"04API_test_product_typeID\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dc161cb96ebf800172308aa\"\n  }\n"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products"
											]
										},
										"description": "Create a product using the API"
									},
									"response": []
								},
								{
									"name": "Update product by PrimaryID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba647d6a-dd1e-46f3-932f-4607d8f4c969",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows product thats been updated\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Updated 04API_test_product_typeID\");",
													"});",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.primaryId).to.eql(\"04API_test_product_typeID\");",
													"});",
													"",
													"pm.test(\"Id is exists\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.id).to.exist;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "ZceoP5fgOsWDft3CHZ0e8eliTNnPIPqSBxKaBkZpD4ZSB3d3aKNQZ9IBskRIrdon",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"typeId\": \"Item Group\"\n}"
										},
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products/04API_test_product_typeID",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products",
												"04API_test_product_typeID"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get product by Primary ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "327d9f1e-24e7-4df7-b486-d330a3a92804",
												"exec": [
													"pm.test(\"Primary ID is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData['Primary ID']).to.eql(\"04API_test_product_typeID\");",
													"});",
													"",
													"pm.test(\"Product Type is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData['Product Type']).to.eql(\"Item Group\");",
													"});",
													"",
													"",
													"pm.test(\"primaryId is correct\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.primaryId).to.eql(\"04API_test_product_typeID\");",
													"});",
													"",
													"",
													"pm.test(\"ID is present\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData._id).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"dateCreated is present\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.dateCreated).to.not.be.empty;",
													"});",
													"",
													"pm.test(\"dateUpdated is present\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.dateUpdated).to.not.be.empty;",
													"});",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "qPOfaXv5dqATAtyEaSJYTFN8U3SslwKgU8EinCNcvlDDaRngks2PHm0Xhv8HEaQW"
											},
											{
												"key": "extendResponse",
												"type": "text",
												"value": "1"
											},
											{
												"key": "attributes",
												"type": "text",
												"value": "*"
											}
										],
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products/04API_test_product_typeID",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products",
												"04API_test_product_typeID"
											]
										},
										"description": "Gets product by Primary ID"
									},
									"response": []
								},
								{
									"name": "Delete Product By PrimaryID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b802d510-e33f-460c-aa04-03af248fb475",
												"exec": [
													"pm.test(\"status is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.status).to.eql(\"success\");",
													"});",
													"",
													"pm.test(\"message shows the deleted product\", function () {",
													"    var jsonData = pm.response.json();",
													"pm.expect(jsonData.data.message).to.eql(\"Deleted 04API_test_product_typeID\");",
													"",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "ZceoP5fgOsWDft3CHZ0e8eliTNnPIPqSBxKaBkZpD4ZSB3d3aKNQZ9IBskRIrdon",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://qa.pimberly.com/api/v2.2/products/04API_test_product_typeID",
											"protocol": "https",
											"host": [
												"qa",
												"pimberly",
												"com"
											],
											"path": [
												"api",
												"v2.2",
												"products",
												"04API_test_product_typeID"
											]
										},
										"description": "Deletes a product using the primary ID "
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "961b49ae-b945-4046-b6d2-e52b041e3135",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "807c5026-f53f-47a1-8991-3bbbd5f31bec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "357233d0-8c4f-4dcd-9931-64c2f6cbedd1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ac555ec2-58c0-4f1a-b73e-cfa4ed6fc1b6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Not Required",
			"item": [
				{
					"name": "010-All attributes with a source of ANY, a master of ANY, already populated by any source, can be updated via API Feed A",
					"item": [
						{
							"name": "Create a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "912a77e8-f587-4193-9f37-d51bdcb4eb18",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows created product Primary ID\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Created 010_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"010_API_test_product\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryId\":\"010_API_test_product\",\n  \"typeId\":\"SKU\",\n  \"schemaId\":\"5dcaa6428aabd1001294fb3a\",\n  \"attributes\" : {\n  \t\n  \t\"PrimaryDescription\" : \"Updated\"\n  \t\n  \t\n  }\n\n\n\n  \n }"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 010_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"010_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular010\": \"Text1\",\n\t\t  \"PlainTextFreeTypedList010\": [\"Text1\",\"Text2\"],\n\t\t  \"PlainTextSingleSelectList010\": \"value1\",\n\t\t  \"PlainTextMultiSelectList010\": [\"value1\",\"value2\"], \n\t\t  \"PlainTextComboList010\": \"value1\",\n\t\t  \"PlainTextSingleSelectDataset010\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiSelectDataset010\": [\"ValueDEFAULT1\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextMultiComboList010\": [\"freevalue\",\"value1\"],\n\t\t  \"PlainTextComboDataset010\": \"ValueDEFAULT1\",\n\t\t  \"PlainTextMultiComboDataset010\": [\"freevalue\",\"ValueDEFAULT1\"],\n\t\t  \"PlainTextKeyValuePairs010\": { \"key1\": \"value1\" },\n\t\t  \"Table\" : \"Table\", \n\t\t  \"CodeRegular010\": \"ABC123\",\n\t\t  \"HTMLRegular010\": \"<p>Text1</p>\",\n\t\t  \"NumberRegular010\": 1,\n\t\t  \"NumberFreeTypedList010\": [111,1],\n\t\t  \"NumberSingleSelectDataset010\": 1,\n\t\t  \"CurrencyRegular010\": 1.5,\n\t\t  \"MeasureWeightgRegular010\": 1,\n\t\t  \"DateRegular010\": \"2019-07-19\",\n\t\t  \"TimeRegular010\": \"11:00\",\n\t\t  \"DateTimeRegular010\": \"2019-07-19T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular010\": true,\n\t\t  \"Media010\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/3992db4f/5d94adbf42d26c0017ec39bb.JPG\",\n\t\t  \"ProductSet010\": \"DNDProductToBeAdded\",\n\t\t  \"URL010\": \"test.com\",\n\t\t  \"FreeTypeURL010\": [\"test1.com\",\"test2.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/010_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"010_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update product by PrimaryID new values",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4742c8d-94c5-470b-be05-9663a8a10af2",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows product thats been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Updated 010_API_test_product\");",
											"});",
											"",
											"pm.test(\"primaryId is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.primaryId).to.eql(\"010_API_test_product\");",
											"});",
											"",
											"pm.test(\"id exists\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.id).to.exist;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n\t\t  \"PlainTextRegular010\": \"Text5\",\n\t\t  \"PlainTextFreeTypedList010\": [\"Text5\",\"Text6\"],\n\t\t  \"PlainTextSingleSelectList010\": \"value2\",\n\t\t  \"PlainTextMultiSelectList010\": [\"value3\",\"value2\"], \n\t\t  \"PlainTextComboList010\": \"value2\",\n\t\t  \"PlainTextSingleSelectDataset010\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiSelectDataset010\": [\"ValueDEFAULT2\",\"ValueDEFAULT3\"],\n\t\t  \"PlainTextMultiComboList010\": [\"freevalue2\",\"value2\"],\n\t\t  \"PlainTextComboDataset010\": \"ValueDEFAULT2\",\n\t\t  \"PlainTextMultiComboDataset010\": [\"freevalue2\",\"ValueDEFAULT2\"],\n\t\t  \"PlainTextKeyValuePairs010\": { \"key1\": \"value2\" },\n\t\t  \"Table\" : \"Table2\", \n\t\t  \"CodeRegular010\": \"ABC123666\",\n\t\t  \"HTMLRegular010\": \"<p>Text2</p>\",\n\t\t  \"NumberRegular010\": 2,\n\t\t  \"NumberFreeTypedList010\": [222,2],\n\t\t  \"NumberSingleSelectDataset010\": 2,\n\t\t  \"CurrencyRegular010\": 2.5,\n\t\t  \"MeasureWeightgRegular010\": 2,\n\t\t  \"DateRegular010\": \"2019-07-20\",\n\t\t  \"TimeRegular010\": \"12:00\",\n\t\t  \"DateTimeRegular010\": \"2019-07-20T11:00:00.000Z\",\n\t\t  \"TrueorFalseRegular010\": false,\n\t\t  \"Media010\": \"https://s3-eu-west-1.amazonaws.com/cdn.preview.aws.eu-w1.pimberly.com/public/asset/raw/5a0edc61963a45000e888630/7d531b65/5d7607c08dcb2b5efa000012.jpg\",\n\t\t  \"ProductSet010\": \"DNDProductToBeAdded2\",\n\t\t  \"URL010\": \"test2.com\",\n\t\t  \"FreeTypeURL010\": [\"test3.com\",\"test4.com\"]\n \n  \n}"
								},
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/010_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"010_API_test_product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete product by PrimaryID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdfd7f5a-ef7d-4fb8-ad0e-76d49c2d21af",
										"exec": [
											"pm.test(\"status is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.status).to.eql(\"success\");",
											"});",
											"",
											"pm.test(\"message shows the deleted product\", function () {",
											"    var jsonData = pm.response.json();",
											"pm.expect(jsonData.data.message).to.eql(\"Deleted API_test_product_update_all_attributes\");",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "yg5r9EU6eqvD10y2GkCwEV2181z26CafjgIMtigm5OsRIMHONBcDka3tKbRuOtlg",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://qa.pimberly.com/api/v2.2/products/010_API_test_product",
									"protocol": "https",
									"host": [
										"qa",
										"pimberly",
										"com"
									],
									"path": [
										"api",
										"v2.2",
										"products",
										"010_API_test_product"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "46a81dc6-64ad-4b0d-b104-96a5f6d59d20",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "239bf048-5758-4897-afeb-741c0184958b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}